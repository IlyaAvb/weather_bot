import json
from email.policy import default

import telebot
from telebot import types
import requests
import fake_useragent
from googletrans import Translator
import sqlite3

from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton

API_key = '3865070e623c4324b55122415242309'


bot = telebot.TeleBot('')

translator = Translator()

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, message.from_user.username)
    if message.from_user.username == 'avarde808':
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        btn = KeyboardButton('–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏')
        markup.add(btn)
    else:
        markup = ''

    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! \n\n –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞,'
                                      ' —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É \n\n'
                                      '‚òÄÔ∏èüå§‚õÖÔ∏è‚õàüå¶üå•üåß', reply_markup=markup)


    conn = sqlite3.connect('get_weatger_bot.db')
    cur = conn.cursor()

    cur.execute('CREATE TABLE IF NOT EXISTS requests (id INTEGER PRIMARY KEY AUTOINCREMENT, user TEXT, description TEXT)')

    conn.commit()
    conn.close()


@bot.message_handler(func=lambda message: True)
def handle_message(message):

    if message.text == '–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏':
        conn = sqlite3.connect('get_weatger_bot.db')
        cur = conn.cursor()

        cur.execute('SELECT * FROM requests')
        rows = cur.fetchall()
        conn.close()

        if rows:
            response = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ –∑–∞–ø—Ä–æ—Å—ã \n\n'
            for row in rows:
                response += f'ID: {row[0]} username: {row[1]} \n'
            bot.send_message(message.chat.id, response)

        else:
            bot.send_message(message.chat.id, '–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö')
    else:
        get_weather(message)

def get_weather(message):

    city = message.text.strip().lower()
    bot.send_message(message.chat.id, '–û–¥–Ω—É –º–∏–Ω—É—Ç—É...')
    try:
        response = requests.get(f'https://api.weatherapi.com/v1/current.json?key={API_key}&q={city}')
        data = response.json()
        name_city = data['location']['name']
        temp_c = data['current']['temp_c']
        description_text = data['current']['condition']['text']
        description_text_RU = translator.translate(description_text, dest='ru').text
        feelslike_c = data['current']['feelslike_c']
        bot.reply_to(message, f"–°–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ ¬´{name_city}¬ª: \n")
        caption = (f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ - {temp_c} –≥—Ä–∞–¥—É—Å–æ–≤ \n"
                   f"–û–ø–∏—Å–∞–Ω–∏–µ - {description_text_RU} \n"
                   f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ - {feelslike_c} –≥—Ä–∞–¥—É—Å–æ–≤ \n")
        open_file = ''
        if temp_c < 20:
            open_file = 'rain.jpg'
        elif temp_c > 20:
            open_file = 'sunny.jpg'
        else:
            open_file = ''
        file = open(open_file, 'rb')
        bot.send_photo(message.chat.id, file, caption=caption)
        username = message.from_user.username
        commit_to_db(username=username, caption=caption)
    except Exception:
        bot.reply_to(message, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...üòî')

def commit_to_db(username, caption):
    conn = sqlite3.connect('get_weatger_bot.db')
    cur = conn.cursor()

    cur.execute('INSERT INTO requests (user, description) VALUES (?, ?)', (username, caption))

    conn.commit()
    conn.close()


# bot.infinity_polling()

